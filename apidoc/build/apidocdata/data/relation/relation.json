{
	"gd3d": {
		"Reflect": {
			"globalFunction": [
				{
					"name": "decorate",
					"description": "Applies a set of decorators to a property of a target object."
				},
				{
					"name": "defineMetadata",
					"description": "Define a unique metadata entry on the target."
				},
				{
					"name": "deleteMetadata",
					"description": "Deletes the metadata entry from the target object with the provided key."
				},
				{
					"name": "getMetadata",
					"description": "Gets the metadata value for the provided metadata key on the target object or its prototype chain."
				},
				{
					"name": "getMetadataKeys",
					"description": "Gets the metadata keys defined on the target object or its prototype chain."
				},
				{
					"name": "getOwnMetadata",
					"description": "Gets the metadata value for the provided metadata key on the target object."
				},
				{
					"name": "getOwnMetadataKeys",
					"description": "Gets the unique metadata keys defined on the target object."
				},
				{
					"name": "hasMetadata",
					"description": "Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined."
				},
				{
					"name": "hasOwnMetadata",
					"description": "Gets a value indicating whether the target object has the provided metadata key defined."
				},
				{
					"name": "metadata",
					"description": "A default metadata decorator factory that can be used on a class, class member, or parameter."
				}
			]
		},
		"gd3d.reflect": {
			"globalFunction": [
				{
					"name": "Field",
					"description": "序列化修饰"
				},
				{
					"name": "SerializeType",
					"description": "//nodeComponent是挂载的脚本，SerializeType是结构化的脚本（比如Vector3）"
				},
				{
					"name": "UIComment",
					"description": "属性面板提示修饰"
				},
				{
					"name": "UIStyle",
					"description": "属性面板显示方式修饰"
				},
				{
					"name": "attr_Class",
					"description": ""
				},
				{
					"name": "attr_Field",
					"description": "//for 变量的修饰器，可以加参数"
				},
				{
					"name": "attr_Func",
					"description": "//for 函数的修饰器，可以加参数"
				},
				{
					"name": "compCall",
					"description": "///该函数为导出的函数"
				},
				{
					"name": "compValue",
					"description": "///defvalue 默认值"
				},
				{
					"name": "createInstance",
					"description": ""
				},
				{
					"name": "editorCode",
					"description": ""
				},
				{
					"name": "getClassName",
					"description": ""
				},
				{
					"name": "getClassTag",
					"description": ""
				},
				{
					"name": "getMeta",
					"description": ""
				},
				{
					"name": "getPrototype",
					"description": ""
				},
				{
					"name": "getPrototypes",
					"description": ""
				},
				{
					"name": "node2DComponent",
					"description": ""
				},
				{
					"name": "nodeBoxCollider",
					"description": ""
				},
				{
					"name": "nodeCamera",
					"description": ""
				},
				{
					"name": "nodeCanvasRendererCollider",
					"description": ""
				},
				{
					"name": "nodeComponent",
					"description": "//usercode 表示这是一个场景节点组件类，可以挂在场景节点上"
				},
				{
					"name": "nodeComponentInspector",
					"description": ""
				},
				{
					"name": "nodeEffectBatcher",
					"description": ""
				},
				{
					"name": "nodeLight",
					"description": ""
				},
				{
					"name": "nodeMeshCollider",
					"description": ""
				},
				{
					"name": "nodeRender",
					"description": ""
				},
				{
					"name": "nodeSphereCollider",
					"description": ""
				},
				{
					"name": "pluginExt",
					"description": ""
				},
				{
					"name": "pluginMenuItem",
					"description": ""
				},
				{
					"name": "pluginWindow",
					"description": ""
				},
				{
					"name": "selfClone",
					"description": "//这个标记了clone时调用实例自己的clone函数"
				},
				{
					"name": "userCode",
					"description": "///上面幾個是通用的"
				}
			],
			"class": [
				{
					"name": "FieldUIStyle",
					"description": ""
				}
			]
		},
		"gd3d.framework": {
			"class": [
				{
					"name": "canvas",
					"description": ""
				},
				{
					"name": "batcher2D",
					"description": ""
				},
				{
					"name": "canvasRenderer",
					"description": ""
				},
				{
					"name": "TransitionType",
					"description": ""
				},
				{
					"name": "button",
					"description": ""
				},
				{
					"name": "image2D",
					"description": ""
				},
				{
					"name": "ImageType",
					"description": "贴图的显示方式"
				},
				{
					"name": "FillMethod",
					"description": "填充方式"
				},
				{
					"name": "label",
					"description": ""
				},
				{
					"name": "HorizontalType",
					"description": ""
				},
				{
					"name": "VerticalType",
					"description": ""
				},
				{
					"name": "rawImage2D",
					"description": "参照UGUI的思路，rawImage只拿整个图片来显示，不关心Sprite、九宫、填充等。这些统一都在iamge中处理"
				},
				{
					"name": "PointEventEnum",
					"description": ""
				},
				{
					"name": "PointEvent",
					"description": ""
				},
				{
					"name": "UIEvent",
					"description": ""
				},
				{
					"name": "overlay2D",
					"description": ""
				},
				{
					"name": "I2DComponent",
					"description": ""
				},
				{
					"name": "IRectRenderer",
					"description": ""
				},
				{
					"name": "C2DComponent",
					"description": ""
				},
				{
					"name": "transform2D",
					"description": "//gameobject 区分清自己现在挂载的transform 是 2d 还是 3d 就好"
				},
				{
					"name": "application",
					"description": "引擎的主入口"
				},
				{
					"name": "IUserCode",
					"description": "usercode接口"
				},
				{
					"name": "IEditorCode",
					"description": "editorcode接口"
				},
				{
					"name": "resID",
					"description": "//三，静态管理，这个是特殊的，不要为他设计"
				},
				{
					"name": "constText",
					"description": "静态text 初始化后不可修改"
				},
				{
					"name": "IAsset",
					"description": "资源接口 扩展资源需要继承此接口"
				},
				{
					"name": "AssetTypeEnum",
					"description": "资源类型"
				},
				{
					"name": "stateLoad",
					"description": "加载状态"
				},
				{
					"name": "assetBundle",
					"description": "资源包"
				},
				{
					"name": "assetMgr",
					"description": "通用的资源管理器，你也可以自己搞个东西当资源，继承IResource即可<p/>资源管理器用引用计数法管理资源，计数混乱会导致问题，循环引用也会导致问题，需要注意<p/>js 语法层面不能提供可靠的自动引用计数机制，所以如果你用乱了，哪啊就是乱了<p/>所有的资源都是从资源管理器get出来的<p/>所有的资源不用的时候都要还到资源管理器<p/>"
				},
				{
					"name": "assetRef",
					"description": "资源引用计数的结构"
				},
				{
					"name": "defMesh",
					"description": ""
				},
				{
					"name": "defShader",
					"description": ""
				},
				{
					"name": "defTexture",
					"description": ""
				},
				{
					"name": "animationClip",
					"description": "动画片段资源"
				},
				{
					"name": "atlas",
					"description": "图集资源"
				},
				{
					"name": "font",
					"description": "字体资源"
				},
				{
					"name": "material",
					"description": "材质资源"
				},
				{
					"name": "mesh",
					"description": "mesh资源"
				},
				{
					"name": "pathasset",
					"description": "路径编辑资源"
				},
				{
					"name": "prefab",
					"description": "预设资源"
				},
				{
					"name": "rawscene",
					"description": "场景数据资源"
				},
				{
					"name": "shader",
					"description": "shader资源"
				},
				{
					"name": "sprite",
					"description": "sprite资源"
				},
				{
					"name": "textasset",
					"description": "文本资源"
				},
				{
					"name": "texture",
					"description": "texture资源"
				},
				{
					"name": "AudioChannel",
					"description": ""
				},
				{
					"name": "AudioEx",
					"description": ""
				},
				{
					"name": "aniplayer",
					"description": ""
				},
				{
					"name": "tPoseInfo",
					"description": ""
				},
				{
					"name": "PlayStyle",
					"description": ""
				},
				{
					"name": "asbone",
					"description": ""
				},
				{
					"name": "ICollider",
					"description": ""
				},
				{
					"name": "boxcollider",
					"description": "表示矩形碰撞盒"
				},
				{
					"name": "ICameraPostQueue",
					"description": ""
				},
				{
					"name": "cameraPostQueue_Depth",
					"description": ""
				},
				{
					"name": "cameraPostQueue_Quad",
					"description": ""
				},
				{
					"name": "cameraPostQueue_Color",
					"description": ""
				},
				{
					"name": "IOverLay",
					"description": ""
				},
				{
					"name": "camera",
					"description": "// }"
				},
				{
					"name": "CullingMask",
					"description": ""
				},
				{
					"name": "effectSystem",
					"description": "特效组件"
				},
				{
					"name": "frustumculling",
					"description": "视锥剔除组件，作为标记存在"
				},
				{
					"name": "guidpath",
					"description": "路径组件"
				},
				{
					"name": "LightTypeEnum",
					"description": ""
				},
				{
					"name": "light",
					"description": "灯光组件"
				},
				{
					"name": "meshcollider",
					"description": "碰撞组件"
				},
				{
					"name": "meshFilter",
					"description": "mesh组件"
				},
				{
					"name": "meshRenderer",
					"description": "mesh的渲染组件"
				},
				{
					"name": "skinnedMeshRenderer",
					"description": ""
				},
				{
					"name": "spherestruct",
					"description": ""
				},
				{
					"name": "spherecollider",
					"description": "表示球碰撞盒"
				},
				{
					"name": "trailRender",
					"description": "拖尾组件"
				},
				{
					"name": "trailStick",
					"description": ""
				},
				{
					"name": "trailRender_recorde",
					"description": "拖尾组件，废弃"
				},
				{
					"name": "trailNode",
					"description": ""
				},
				{
					"name": "pointinfo",
					"description": ""
				},
				{
					"name": "inputMgr",
					"description": ""
				},
				{
					"name": "EffectSystemData",
					"description": ""
				},
				{
					"name": "EffectElement",
					"description": ""
				},
				{
					"name": "EffectElementData",
					"description": ""
				},
				{
					"name": "EffectAttrsData",
					"description": ""
				},
				{
					"name": "EffectFrameData",
					"description": ""
				},
				{
					"name": "EffectLerpData",
					"description": ""
				},
				{
					"name": "EffectActionData",
					"description": ""
				},
				{
					"name": "EffectMatData",
					"description": ""
				},
				{
					"name": "EffectBatcher",
					"description": ""
				},
				{
					"name": "EffectPlayStateEnum",
					"description": ""
				},
				{
					"name": "EffectElementTypeEnum",
					"description": ""
				},
				{
					"name": "EffectLerpTypeEnum",
					"description": ""
				},
				{
					"name": "RenderModel",
					"description": ""
				},
				{
					"name": "ParticleEmissionType",
					"description": ""
				},
				{
					"name": "EmissionData",
					"description": "粒子发射器"
				},
				{
					"name": "Emission",
					"description": ""
				},
				{
					"name": "UVSprite",
					"description": ""
				},
				{
					"name": "UVRoll",
					"description": ""
				},
				{
					"name": "UVTypeEnum",
					"description": ""
				},
				{
					"name": "ParticleNode",
					"description": "粒子节点"
				},
				{
					"name": "AlphaNode",
					"description": ""
				},
				{
					"name": "UVSpeedNode",
					"description": ""
				},
				{
					"name": "ParticleNodeVec2",
					"description": ""
				},
				{
					"name": "ParticleNodeNumber",
					"description": ""
				},
				{
					"name": "ParticleSystemShape",
					"description": "粒子初始方向类型"
				},
				{
					"name": "ParticleStartData",
					"description": "粒子初始数据"
				},
				{
					"name": "emitfromenum",
					"description": ""
				},
				{
					"name": "ValueData",
					"description": ""
				},
				{
					"name": "Curve3",
					"description": "贝塞尔曲线，目前定义了三种：线性贝塞尔曲线(两个点形成),二次方贝塞尔曲线（三个点形成），三次方贝塞尔曲线（四个点形成）"
				},
				{
					"name": "IEffectAction",
					"description": ""
				},
				{
					"name": "LinearAction",
					"description": ""
				},
				{
					"name": "DestroyAction",
					"description": ""
				},
				{
					"name": "LoopAction",
					"description": ""
				},
				{
					"name": "UVRollAction",
					"description": ""
				},
				{
					"name": "UVSpriteAnimationAction",
					"description": ""
				},
				{
					"name": "RotationAction",
					"description": ""
				},
				{
					"name": "RoseCurveAction",
					"description": ""
				},
				{
					"name": "TrailAction",
					"description": ""
				},
				{
					"name": "BreathAction",
					"description": ""
				},
				{
					"name": "EffectParser",
					"description": ""
				},
				{
					"name": "EffectUtil",
					"description": ""
				},
				{
					"name": "EmissionBatcher",
					"description": ""
				},
				{
					"name": "Particle",
					"description": "//这里根据发射器定义的初始参数  计算当前要提交的数据"
				},
				{
					"name": "nodeType",
					"description": ""
				},
				{
					"name": "Particles",
					"description": "//特效系统中的发射器都丢在这里"
				},
				{
					"name": "EmissionElement",
					"description": "//发射器也作为特效系统的一个元素"
				},
				{
					"name": "INodeComponent",
					"description": "组件实例接口"
				},
				{
					"name": "nodeComponent",
					"description": "组件接口"
				},
				{
					"name": "gameObject",
					"description": "gameObject类 对应unity中gameObject概念"
				},
				{
					"name": "renderContext",
					"description": "//渲染上下文,渲染所需要的所有参数"
				},
				{
					"name": "RenderLayerEnum",
					"description": ""
				},
				{
					"name": "IRenderer",
					"description": "//渲染器"
				},
				{
					"name": "renderList",
					"description": "//渲染列表"
				},
				{
					"name": "renderLayer",
					"description": ""
				},
				{
					"name": "scene",
					"description": "场景是基础的功能，有场景图，相当于Unity的Level"
				},
				{
					"name": "sceneMgr",
					"description": ""
				},
				{
					"name": "taskstate",
					"description": ""
				},
				{
					"name": "ITask",
					"description": ""
				},
				{
					"name": "taskMgr",
					"description": ""
				},
				{
					"name": "aabb",
					"description": "表示轴对称包围盒"
				},
				{
					"name": "obb",
					"description": ""
				},
				{
					"name": "pickinfo",
					"description": ""
				},
				{
					"name": "ray",
					"description": "射线"
				},
				{
					"name": "transform",
					"description": "transform类 对应unity中transform概念"
				},
				{
					"name": "insID",
					"description": "作为引擎实例的唯一id使用 自增"
				},
				{
					"name": "NumberUtil",
					"description": "获取键盘Keycode的工具类"
				},
				{
					"name": "RegexpUtil",
					"description": ""
				},
				{
					"name": "StringUtil",
					"description": ""
				},
				{
					"name": "PrimitiveType",
					"description": ""
				},
				{
					"name": "Primitive2DType",
					"description": ""
				},
				{
					"name": "TransformUtil",
					"description": ""
				}
			]
		},
		"gd3d.math": {
			"globalFunction": [
				{
					"name": "GetPointAlongCurve",
					"description": ""
				},
				{
					"name": "Multiply",
					"description": "// 计算叉乘 |P0P1| × |P0P2|"
				},
				{
					"name": "caclStringByteLength",
					"description": ""
				},
				{
					"name": "calPlaneLineIntersectPoint",
					"description": ""
				},
				{
					"name": "colorClone",
					"description": ""
				},
				{
					"name": "colorLerp",
					"description": ""
				},
				{
					"name": "colorMultiply",
					"description": ""
				},
				{
					"name": "colorSet_Black",
					"description": ""
				},
				{
					"name": "colorSet_Gray",
					"description": ""
				},
				{
					"name": "colorSet_White",
					"description": ""
				},
				{
					"name": "floatClamp",
					"description": "//临时写在这里"
				},
				{
					"name": "floatFormat",
					"description": ""
				},
				{
					"name": "getKeyCodeByAscii",
					"description": ""
				},
				{
					"name": "isContain",
					"description": "//判断点是否在矩形p1p2p3p4中"
				},
				{
					"name": "matrix2Quaternion",
					"description": ""
				},
				{
					"name": "matrix3x2Clone",
					"description": ""
				},
				{
					"name": "matrix3x2Decompose",
					"description": ""
				},
				{
					"name": "matrix3x2Inverse",
					"description": ""
				},
				{
					"name": "matrix3x2MakeIdentity",
					"description": ""
				},
				{
					"name": "matrix3x2MakeRotate",
					"description": ""
				},
				{
					"name": "matrix3x2MakeScale",
					"description": ""
				},
				{
					"name": "matrix3x2MakeTransformRTS",
					"description": ""
				},
				{
					"name": "matrix3x2MakeTranslate",
					"description": ""
				},
				{
					"name": "matrix3x2Multiply",
					"description": ""
				},
				{
					"name": "matrix3x2TransformNormal",
					"description": ""
				},
				{
					"name": "matrix3x2TransformVector2",
					"description": ""
				},
				{
					"name": "matrixAdd",
					"description": ""
				},
				{
					"name": "matrixClone",
					"description": ""
				},
				{
					"name": "matrixDecompose",
					"description": ""
				},
				{
					"name": "matrixGetScale",
					"description": ""
				},
				{
					"name": "matrixGetTranslation",
					"description": ""
				},
				{
					"name": "matrixGetVector3ByOffset",
					"description": ""
				},
				{
					"name": "matrixInverse",
					"description": ""
				},
				{
					"name": "matrixLerp",
					"description": ""
				},
				{
					"name": "matrixLookatLH",
					"description": "//lights fix"
				},
				{
					"name": "matrixMakeIdentity",
					"description": ""
				},
				{
					"name": "matrixMakeRotateAxisAngle",
					"description": ""
				},
				{
					"name": "matrixMakeScale",
					"description": ""
				},
				{
					"name": "matrixMakeTransformRTS",
					"description": ""
				},
				{
					"name": "matrixMakeTranslate",
					"description": ""
				},
				{
					"name": "matrixMultiply",
					"description": ""
				},
				{
					"name": "matrixProject_OrthoLH",
					"description": ""
				},
				{
					"name": "matrixProject_PerspectiveLH",
					"description": ""
				},
				{
					"name": "matrixReset",
					"description": ""
				},
				{
					"name": "matrixScaleByNum",
					"description": ""
				},
				{
					"name": "matrixTransformNormal",
					"description": "//变换向量"
				},
				{
					"name": "matrixTransformVector3",
					"description": ""
				},
				{
					"name": "matrixTranspose",
					"description": "当前矩阵转置"
				},
				{
					"name": "matrixViewLookatLH",
					"description": ""
				},
				{
					"name": "matrixZero",
					"description": ""
				},
				{
					"name": "numberLerp",
					"description": ""
				},
				{
					"name": "quat2Lookat",
					"description": ""
				},
				{
					"name": "quatClone",
					"description": ""
				},
				{
					"name": "quatFromAxisAngle",
					"description": ""
				},
				{
					"name": "quatFromEulerAngles",
					"description": ""
				},
				{
					"name": "quatFromYawPitchRoll",
					"description": ""
				},
				{
					"name": "quatInverse",
					"description": ""
				},
				{
					"name": "quatLerp",
					"description": ""
				},
				{
					"name": "quatLookat",
					"description": "//获取一个注视目标的四元数"
				},
				{
					"name": "quatMagnitude",
					"description": ""
				},
				{
					"name": "quatMultiply",
					"description": ""
				},
				{
					"name": "quatMultiplyDataAndQuat",
					"description": ""
				},
				{
					"name": "quatMultiplyVector",
					"description": ""
				},
				{
					"name": "quatNormalize",
					"description": ""
				},
				{
					"name": "quatReset",
					"description": ""
				},
				{
					"name": "quatToAxisAngle",
					"description": ""
				},
				{
					"name": "quatToEulerAngles",
					"description": ""
				},
				{
					"name": "quatToMatrix",
					"description": ""
				},
				{
					"name": "quatTransformVector",
					"description": ""
				},
				{
					"name": "quatTransformVectorDataAndQuat",
					"description": ""
				},
				{
					"name": "quatYAxis",
					"description": ""
				},
				{
					"name": "quaternionFormat",
					"description": ""
				},
				{
					"name": "rectEqul",
					"description": ""
				},
				{
					"name": "rectInner",
					"description": ""
				},
				{
					"name": "rectSet_One",
					"description": ""
				},
				{
					"name": "rectSet_Zero",
					"description": ""
				},
				{
					"name": "scaleToRef",
					"description": ""
				},
				{
					"name": "sign",
					"description": ""
				},
				{
					"name": "spriteAnimation",
					"description": "//row：图片行数//column:图片列数//index：第几张图片（index从0开始计数）"
				},
				{
					"name": "vec2Add",
					"description": ""
				},
				{
					"name": "vec2Clone",
					"description": ""
				},
				{
					"name": "vec2Distance",
					"description": ""
				},
				{
					"name": "vec2Equal",
					"description": "//阀值先写这里了，回头"
				},
				{
					"name": "vec2Length",
					"description": ""
				},
				{
					"name": "vec2Multiply",
					"description": ""
				},
				{
					"name": "vec2Normalize",
					"description": ""
				},
				{
					"name": "vec2SLerp",
					"description": ""
				},
				{
					"name": "vec2ScaleByNum",
					"description": ""
				},
				{
					"name": "vec2Subtract",
					"description": ""
				},
				{
					"name": "vec3Add",
					"description": ""
				},
				{
					"name": "vec3Angle",
					"description": ""
				},
				{
					"name": "vec3AngleBetween",
					"description": ""
				},
				{
					"name": "vec3ClampLength",
					"description": ""
				},
				{
					"name": "vec3Clone",
					"description": "// }"
				},
				{
					"name": "vec3Cross",
					"description": ""
				},
				{
					"name": "vec3Distance",
					"description": ""
				},
				{
					"name": "vec3Dot",
					"description": ""
				},
				{
					"name": "vec3Equal",
					"description": "////又有参数又有返回值的必须是static"
				},
				{
					"name": "vec3Exclude",
					"description": ""
				},
				{
					"name": "vec3Format",
					"description": ""
				},
				{
					"name": "vec3Length",
					"description": ""
				},
				{
					"name": "vec3Max",
					"description": ""
				},
				{
					"name": "vec3Min",
					"description": ""
				},
				{
					"name": "vec3Minus",
					"description": ""
				},
				{
					"name": "vec3Normalize",
					"description": ""
				},
				{
					"name": "vec3Product",
					"description": ""
				},
				{
					"name": "vec3Project",
					"description": ""
				},
				{
					"name": "vec3ProjectOnPlane",
					"description": ""
				},
				{
					"name": "vec3Reflect",
					"description": ""
				},
				{
					"name": "vec3Reset",
					"description": ""
				},
				{
					"name": "vec3SLerp",
					"description": ""
				},
				{
					"name": "vec3ScaleByNum",
					"description": ""
				},
				{
					"name": "vec3ScaleByVec3",
					"description": ""
				},
				{
					"name": "vec3SetByFloat",
					"description": ""
				},
				{
					"name": "vec3Set_Back",
					"description": ""
				},
				{
					"name": "vec3Set_Down",
					"description": ""
				},
				{
					"name": "vec3Set_Forward",
					"description": ""
				},
				{
					"name": "vec3Set_Left",
					"description": ""
				},
				{
					"name": "vec3Set_One",
					"description": ""
				},
				{
					"name": "vec3Set_Right",
					"description": ""
				},
				{
					"name": "vec3Set_Up",
					"description": ""
				},
				{
					"name": "vec3SqrLength",
					"description": ""
				},
				{
					"name": "vec3Subtract",
					"description": ""
				},
				{
					"name": "vec3ToString",
					"description": ""
				},
				{
					"name": "vec4Clone",
					"description": ""
				},
				{
					"name": "x_AXIS",
					"description": ""
				},
				{
					"name": "y_AXIS",
					"description": ""
				},
				{
					"name": "z_AXIS",
					"description": ""
				}
			],
			"class": [
				{
					"name": "vector2",
					"description": "//重构原则1，将结构和计算函数全部分离"
				},
				{
					"name": "rect",
					"description": ""
				},
				{
					"name": "border",
					"description": ""
				},
				{
					"name": "color",
					"description": ""
				},
				{
					"name": "vector3",
					"description": ""
				},
				{
					"name": "vector4",
					"description": ""
				},
				{
					"name": "quaternion",
					"description": ""
				},
				{
					"name": "matrix",
					"description": ""
				},
				{
					"name": "matrix3x2",
					"description": ""
				},
				{
					"name": "angelref",
					"description": ""
				},
				{
					"name": "commonStatic",
					"description": ""
				},
				{
					"name": "pool",
					"description": ""
				}
			]
		},
		"": {
			"class": [
				{
					"name": "PVRHeader",
					"description": ""
				},
				{
					"name": "ChannelTypes",
					"description": ""
				}
			]
		},
		"gd3d.io": {
			"globalFunction": [
				{
					"name": "Serialize",
					"description": "序列化"
				},
				{
					"name": "SerializeForInspector",
					"description": ""
				},
				{
					"name": "cloneObj",
					"description": ""
				},
				{
					"name": "cloneOtherType",
					"description": ""
				},
				{
					"name": "cloneOtherTypeOrArray",
					"description": ""
				},
				{
					"name": "deSerialize",
					"description": "反序列化  传入的源数据为json"
				},
				{
					"name": "deSerializeObj",
					"description": "//反序列化赋值"
				},
				{
					"name": "deSerializeOtherType",
					"description": ""
				},
				{
					"name": "deSerializeOtherTypeOrArray",
					"description": ""
				},
				{
					"name": "dofillReference",
					"description": ""
				},
				{
					"name": "dofillReferenceOrArray",
					"description": ""
				},
				{
					"name": "fillCloneReference",
					"description": ""
				},
				{
					"name": "fillCloneReferenceType",
					"description": ""
				},
				{
					"name": "fillCloneReferenceTypeOrArray",
					"description": ""
				},
				{
					"name": "fillReference",
					"description": ""
				},
				{
					"name": "isArray",
					"description": ""
				},
				{
					"name": "isArrayOrDic",
					"description": ""
				},
				{
					"name": "isAsset",
					"description": ""
				},
				{
					"name": "isAssetInspector",
					"description": ""
				},
				{
					"name": "loadArrayBuffer",
					"description": ""
				},
				{
					"name": "loadBlob",
					"description": ""
				},
				{
					"name": "loadImg",
					"description": ""
				},
				{
					"name": "loadText",
					"description": ""
				},
				{
					"name": "serializeObj",
					"description": "//根据反射类型将对象进行序列化"
				},
				{
					"name": "serializeObjForInspector",
					"description": ""
				},
				{
					"name": "serializeOtherType",
					"description": ""
				},
				{
					"name": "serializeOtherTypeForInspector",
					"description": ""
				},
				{
					"name": "serializeOtherTypeOrArray",
					"description": ""
				},
				{
					"name": "serializeOtherTypeOrArrayForInspector",
					"description": ""
				},
				{
					"name": "stringToBlob",
					"description": "// }"
				},
				{
					"name": "stringToUtf8Array",
					"description": ""
				}
			],
			"class": [
				{
					"name": "binBuffer",
					"description": ""
				},
				{
					"name": "converter",
					"description": ""
				},
				{
					"name": "binTool",
					"description": ""
				},
				{
					"name": "SerializeDependent",
					"description": "//依赖的资源路径"
				},
				{
					"name": "referenceInfo",
					"description": ""
				},
				{
					"name": "enumMgr",
					"description": ""
				},
				{
					"name": "binReader",
					"description": ""
				},
				{
					"name": "binWriter",
					"description": ""
				}
			]
		},
		"Stats": {
			"class": [
				{
					"name": "Stats",
					"description": ""
				}
			]
		},
		"gd3d.render": {
			"class": [
				{
					"name": "ShowFaceStateEnum",
					"description": ""
				},
				{
					"name": "DrawModeEnum",
					"description": ""
				},
				{
					"name": "BlendModeEnum",
					"description": ""
				},
				{
					"name": "glDrawPass",
					"description": ""
				},
				{
					"name": "VertexFormatMask",
					"description": ""
				},
				{
					"name": "number4",
					"description": ""
				},
				{
					"name": "MeshTypeEnum",
					"description": "//原始模型数据"
				},
				{
					"name": "drawInfo",
					"description": ""
				},
				{
					"name": "glMesh",
					"description": ""
				},
				{
					"name": "meshData",
					"description": ""
				},
				{
					"name": "staticMeshRenderer",
					"description": "//一个pass 的渲染器"
				},
				{
					"name": "batchRenderer",
					"description": "//一个批的渲染器"
				},
				{
					"name": "glWindow",
					"description": ""
				},
				{
					"name": "UniformTypeEnum",
					"description": ""
				},
				{
					"name": "uniform",
					"description": ""
				},
				{
					"name": "ShaderTypeEnum",
					"description": ""
				},
				{
					"name": "glShader",
					"description": ""
				},
				{
					"name": "glProgram",
					"description": ""
				},
				{
					"name": "shaderPool",
					"description": ""
				},
				{
					"name": "TextureFormatEnum",
					"description": ""
				},
				{
					"name": "textureReader",
					"description": ""
				},
				{
					"name": "ITexture",
					"description": ""
				},
				{
					"name": "glRenderTarget",
					"description": ""
				},
				{
					"name": "glTexture2D",
					"description": ""
				},
				{
					"name": "WriteableTexture2D",
					"description": ""
				},
				{
					"name": "caps",
					"description": ""
				},
				{
					"name": "webglkit",
					"description": ""
				}
			]
		}
	},
	"other": {
		"global": {
			"class": [
				{
					"name": "Types",
					"description": "基础类型介绍"
				}
			]
		}
	}
}